        1.jq的链式调用
            最大的特点:写的更少做的更多的具体体现
        
        2.jq链式调用的原理
            jq中所有的方法调用完成后都会返回当前jq对象

        3.如果解决inline-block带来的空隙问题？
            (1).元素与元素之间不留空格,紧挨着写
            (2).父级元素设置font-size:0
            (3)多行注释也可以

                           4.基础选择器
        1.id选择器
            $('#id名字')  

        2.类选择器
            $('.类名')

        3.通配符选择器
            $('*')

        4.标签选择器
            $('标签名')

        5.群组选择器
            $('1，2')

                            5.层级选择器

        1.后代选择器(拿到代后所有元素)
            $('box p')拿到box下面的所有p标签

        2.子元素选择器(只拿到子元素，拿不到孙子级别的元素)
            $('box > p')拿到box下面的子元素p标签

        3.相邻选择器(选择所有紧接在A元素后的B标签)
            $('box A+B')拿到box下的A元素后面的B元素

        4.一般兄弟选择器
            $('box p ~li')拿到box下面的p标签之后的同级标签li

                            6.变量提升
        变量提示(预编译)
            在js执行之前，首先把var声明的变量和函数提升到当前作用域的最顶部(这个过程看不到，但真实存在)

                            7.过滤选择器

        1.语法:p:nth-child(num);
            父级元素下的第num个p标签，在乎的是位置
        2.语法:p:nth-of-type(num);
            父级元素下第num个类型为p的标签，在乎的是类型
        3.语法:p:first-child
            父级元素下第一个p标签(如果不是，则没有效果)
        4.语法：p:last-child 
            父级元素下最后一个p标签(如果不是，则没有效果)
        5.语法:p-onliy-child
            父级元素只有以一个为p标签
        6.语法:p:eq(num) 索引 参数从0开始
            父级元素下索引为第num个的p标签,返回的是jq对象
        7.语法:p:first
            选取页面中第一个p标签
        8.语法:p:last
            选取页面中最后一个p标签
        9.语法:p:even
            选取索引值为偶数的p标签(索引值从0开始)
        10.语法:p:odd
            选取索引值为奇数的p标签(索引值从0开始)
        11.语法:p:gt(num)
            选取索引值大于num的p标签(不包含num标签)
        12.语法:p:lt(num)
            选取索引值小于num的p标签(不包含num标签)
        13.语法:p:contains(text)
            选取含有text的标签
        14.语法:p:empty
            选取不包含子元素或者空格的元素
        15.语法:p:parent
            选取包含子元素或者空格的元素
        16.语法:li:has(span)
            选取li里面包含span标签的元素(判断)
        17.语法:p:focus
            选择当前获得焦点的元素
